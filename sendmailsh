#!/bin/bash

# Help function
function show_help() {
    echo "Usage: $0 <command> [arguments]"
    echo
    echo "Commands:"
    echo "  sendmail       Send email using sendmail (local MTA)"
    echo "  smtp           Send email via manual SMTP communication"
    echo "  help           Show this help message"
    echo
    echo "Arguments (for 'sendmail' and 'smtp'):"
    echo "  SMTP_SERVER   The SMTP server address (e.g., smtp.example.com or localhost)"
    echo "  SMTP_PORT     The SMTP server port (default is 25 for local, 587 for external)"
    echo "  FROM_EMAIL    The sender's email address (e.g., sender@example.com)"
    echo "  TO_EMAIL      The recipient's email address (e.g., recipient@example.com)"
    echo "  TEXT_FILE     Path to the text file containing the email body"
    echo "  SUBJECT       (Optional) Subject of the email (default: 'Email from Bash Script')"
    echo
    echo "Examples:"
    echo "  $0 sendmail localhost 25 sender@example.com recipient@example.com email_body.txt 'Test Email'"
    echo "  $0 smtp smtp.example.com 587 sender@example.com recipient@example.com email_body.txt"
}

# Check prerequisites
function check_prerequisites() {
    local dependencies=("nc" "sendmail")
    for dep in "${dependencies[@]}"; do
        if ! command -v "$dep" &>/dev/null; then
            echo "Warning: $dep is not installed. It may limit functionality."
        fi
    done
    if [[ ! -f "$TEXT_FILE" ]]; then
        echo "Error: File $TEXT_FILE not found!"
        exit 1
    fi
}

# Prepare email content
function prepare_email() {
    EMAIL_CONTENT="From: $FROM_EMAIL
To: $TO_EMAIL
Subject: $SUBJECT

$(cat "$TEXT_FILE")
"
}

# Send email using sendmail
function send_email_sendmail() {
    echo "Using sendmail to send the email..."
    {
        echo "To: $TO_EMAIL"
        echo "Subject: $SUBJECT"
        echo "From: $FROM_EMAIL"
        echo
        cat "$TEXT_FILE"
    } | sendmail -t

    if [[ $? -eq 0 ]]; then
        echo "Email sent successfully via sendmail!"
    else
        echo "Failed to send email using sendmail."
        exit 1
    fi
}

# Send email manually via SMTP
function send_email_smtp() {
    echo "Sending email manually via SMTP..."
    {
        echo "HELO localhost"
        echo "MAIL FROM:<$FROM_EMAIL>"
        echo "RCPT TO:<$TO_EMAIL>"
        echo "DATA"
        echo "$EMAIL_CONTENT"
        echo "."
        echo "QUIT"
    } | nc "$SMTP_SERVER" "$SMTP_PORT"

    if [[ $? -eq 0 ]]; then
        echo "Email sent successfully via manual SMTP communication!"
    else
        echo "Failed to send email using manual SMTP."
        exit 1
    fi
}

# Main function
function main() {
    local command="$1"
    shift 1  # Shift the command out of the arguments array

    case "$command" in
    sendmail)
        if [[ $# -lt 5 ]]; then
            echo "Error: Insufficient arguments for sendmail."
            show_help
            exit 1
        fi
        SMTP_SERVER="$1"
        SMTP_PORT="$2"
        FROM_EMAIL="$3"
        TO_EMAIL="$4"
        TEXT_FILE="$5"
        SUBJECT="${6:-'Email from Bash Script'}"

        check_prerequisites
        prepare_email
        send_email_sendmail
        ;;
    smtp)
        if [[ $# -lt 5 ]]; then
            echo "Error: Insufficient arguments for SMTP."
            show_help
            exit 1
        fi
        SMTP_SERVER="$1"
        SMTP_PORT="$2"
        FROM_EMAIL="$3"
        TO_EMAIL="$4"
        TEXT_FILE="$5"
        SUBJECT="${6:-'Email from Bash Script'}"

        check_prerequisites
        prepare_email
        send_email_smtp
        ;;
    help | --help | -h)
        show_help
        ;;
    *)
        echo "Error: Invalid command '$command'."
        show_help
        exit 1
        ;;
    esac
}

# Entry point
main "$@"